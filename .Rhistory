library(datasets)
airquality
?rnorm
help.search("rnorm")
args("rnorm")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
source("http://bioconductor.org/biocLite.R")
library(ggplot2)
install.packages("devtools")
install.packages("lattice")
library(datasets)
data("airquality")
data(airquality)
cor(airquality)
x <- 1
print(x)
x
msg<-"Hola"
msg
msg
X<- #esta expresion está incompleta
X<- #esta expresion está incompleta, en la consola aparece "+"
msg1<-"Hola
msg1
x<-1:20
x
x<-1:20
x<-1:20
x<-1:20
x
x
x
print(x)
print(x)
print(x)
x<-1
msg1
print(x)
print(x)
x
y
x
x
?vector
print(x)
x
x <- 1:20
print(x)
class(a)
x
x
class(a)
class(a)
a
1/0
0/0
Clas(a)
Class(a)
a<-1
a
class(a)
mi_vector<-vector("integer",5)
x
x
x
x<-1:50
x
x
x
x1<- c(0.5,0.6)
x2<-c(TRUE,FALSE)
x3<-c(T,F)
x4<-c("a","b","c")
x5<-9:29
x6<-c(2+1i,3-5i,3.14+1.186i)
x7<-c(1.7,"a")
y2<-c(TRUE,2)
y3<-c("a",TRUE)
x<-0:6
x
as.logical(x)
y
y<-c(0:6,5)
y
y
y<-c(0:6,0.5)
y
z<- c("a","b","c")
as.numeric(z)
as.logical(z)
as.complex(z)
z<-(4.5,6.8,2.3,8.9)
z<-c(4.5,6.8,2.3,8.9)
as.integer(z)
x<-list(1,"a",TRUE,1+4i)
x
as.numeric(z)
x<-list(1,"a",TRUE,1+4i,0:100)
x
x<-list(1,"a",TRUE,1+4i,0:100)
x
x<-list(1,"a",TRUE,1+4i,0:100)
x
x<-list(1,"a",TRUE,1+4i,0:100)
x
?matrix
m<-matrix(nrow=2,ncol=3)
m
dim(m)
attributes(m)
?attributes
m<-matrix(1:6,nrow=2,ncol=3)
m
?matrix
m<-matrix(1:6,nrow=2,ncol=3,byrow=TRUE)
m
m<-matrix(1:6,2,3)
m
m<-matrix(1:6,2,3,byrow=TRUE)
m
m<-1:10
m
dim(m)<-(2,5)
m
dim(m)<-c(2,5)
m
dim(m)<-c(5,2)
m
cbind(x,y)
x<-1:3
y<-10:12
cbind(x,y)
rbind(x,y)
x<-factor(c("yes","yes","no","yes","no"))
x
table(x)
unclass(x)
x<-factor(c("yes","yes","no","yes","no")), levels=c("yes","no")
x
x<-factor(c("yes","yes","no","yes","no"))
levels=c("yes","no")
x
x<-factor(c("yes","yes","no","yes","no"))
levels=c("yes","no"))
x
x<-factor(c("yes","yes","no","yes","no")),
levels=c("yes","no"))
x
x<-factor(c("yes","yes","no","yes","no")),
levels=c("yes","no"))
x
x<-factor(c("yes","yes","no","yes","no"))levels=c("yes","no"))
x
x<-factor(c("yes","yes","no","yes","no"),
levels=c("yes","no"))
x
x
x<-c(1,2,NA,10,3)
x
x<-c(1,2,NA,10,3)
x
is.na(x)
is.nan(x)
x<-(1,2,NA,10,3,NaN)
x
x<-(1,2,NA,10,3,NaN)
is.na(x)
is.nan(x)
x<-c(1,2,NA,10,3,NaN)
is.na(x)
is.nan(x)
?data.frame
x<-data.frame(foo=1:4, bar=c(T,T,F,T))
x<-data.frame(foo=1:4,bar=c(T,T,F,T))
x<-data.frame(foo=1:4,bar=c(T,T,F,T))
x
nrow(x)
ncol(x)
names(x)
x<-1:3
names(x)
x<-1:3
names(x)<- c("foo","yessi","elsy")
x
x<- list(a=1,b=2,c=3)
x
x<- list(a=1,b=2,c=3)
x
x<-list(1,2,3)
x
m<-matrix(1:4,2,2)
m
name(m)
m<-matrix(1:4,2,2)
m
names(m)
m<-matrix(1:4,2,2)
m
dimnames(m)
dimnames(m)<-list(c("a","b"),c("c","d"))
m
?read.table
?read.csv
y<-data.frame(a=1,b="a")
dput(y)
?dput
setwd("~/4° Semestre/Progra III/GitHub/Programacion_Actuarial_III/Programacion_Actuarial_III")
y<-data.frame(a=1,b="a")
dput(y)
dput(y,"y.R")
dget("y.R")
y<-dget("y.R")
rm(y)
y<-dget("y.R")
y
x<-"Programación Actuarial III"
y<-data.frame(a=1,b="a")
dump(c(x,y),file="data.R")
x<-"Programación Actuarial III"
y<-data.frame(a=1,b="a")
dump(c("x","y"),file="data.R")
x
y
source("data.R")
x<-"Programación Actuarial III"
y<-data.frame(a=1:10,b="a")
dump(c("x","y"),file="data.R")
source("data.R")
